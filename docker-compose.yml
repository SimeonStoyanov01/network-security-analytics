version: '3.8'
services:
  sniffer:
    build:
      context: .
      dockerfile: service.Dockerfile
    image: sniffer:local
    version: '3.8'
    services:
      sniffer:
        build:
          context: .
          dockerfile: service.Dockerfile
        image: sniffer:local
        working_dir: /src
        command: ["bash", "-c", "python /src/src/services/sniffer.py --mode server --input /data/input --host 0.0.0.0 --port 8000"]
        ports:
          - "8000:8000"
        volumes:
          - ./data/input:/data/input

      cicflowmeter:
        build:
          context: ./CICFlowMeter
          dockerfile: Dockerfile
        image: cicflowmeter:offline
        volumes:
          - ./data/input:/data
          - ./data/out:/data/out

      flow-extractor:
        build:
          context: .
          dockerfile: flow-extractor.Dockerfile
        image: flow-extractor:local
        working_dir: /src
        command: ["/bin/bash", "-c", "python3 /src/src/services/flow_extractor.py --input /data/input --out /data/out"]
        volumes:
          - ./data/input:/data/input
          - ./data/out:/data/out

      analyzer:
        build:
          context: .
          dockerfile: service.Dockerfile
        image: analyzer:local
        working_dir: /src
        command: ["bash", "-c", "python /src/src/services/analyzer.py --flows /data/out"]
        volumes:
          - ./data/out:/data/out

        dockerfile: service.Dockerfile
      image: sniffer:local
      services:
        sniffer:
          build:
            context: .
            dockerfile: service.Dockerfile
          image: sniffer:local
          working_dir: /src
          command: ["bash", "-c", "python /src/src/services/sniffer.py --mode server --input /data/input --host 0.0.0.0 --port 8000"]
          ports:
            - "8000:8000"
          volumes:
            - ./data/input:/data/input

        cicflowmeter:
          build:
            context: ./CICFlowMeter
            dockerfile: Dockerfile
          image: cicflowmeter:offline
          volumes:
            - ./data/input:/data
            - ./data/out:/data/out

        flow-extractor:
          build:
            context: .
            dockerfile: flow-extractor.Dockerfile
          image: flow-extractor:local
          working_dir: /src
          command: ["/bin/bash", "-c", "python3 /src/src/services/flow_extractor.py --input /data/input --out /data/out"]
          volumes:
            - ./data/input:/data/input
            - ./data/out:/data/out

        analyzer:
          build:
            context: .
            dockerfile: service.Dockerfile
          image: analyzer:local
          working_dir: /src
          command: ["bash", "-c", "python /src/src/services/analyzer.py --flows /data/out"]
          volumes:
            - ./data/out:/data/out

        image: analyzer:local
        working_dir: /src
        command: ["bash", "-c", "python /src/src/services/analyzer.py --flows /data/out"]
        volumes:
          - ./data/out:/data/out
